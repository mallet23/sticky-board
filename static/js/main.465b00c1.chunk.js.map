{"version":3,"sources":["stores/StickBoardStoreContext.ts","stores/StickyBoardStore.ts","stores/StickBoardStoreProvider.tsx","utils/random.ts","utils/createDefaultNote.ts","components/AddNote/ApplyButton.tsx","components/AddNote/ControlPanel.tsx","components/AddNote/AddNote.tsx","components/StickyNote/Body/Editor.tsx","components/StickyNote/Body/Body.tsx","components/StickyNote/Header/DeleteButton.tsx","components/StickyNote/Header/Header.tsx","components/StickyNote/StickyNote.tsx","hooks/useObserveElementResize.ts","components/StickersZone.tsx","components/Board.tsx","components/index.tsx","App.tsx","index.tsx"],"names":["StickBoardStoreContext","createContext","undefined","storageKey","StickBoardStore","action","bound","draggableStartDelta","makeObservable","this","savedNotes","localStorage","getItem","notes","JSON","parse","reaction","updateStorage","note","startPosition","draggableNoteId","id","top","left","filter","n","position","map","newPositionY","newPositionX","x","patch","setItem","stringify","observable","StickBoardStoreProvider","children","store","Provider","value","randomDarkColor","color","i","Math","floor","random","pow","toString","slice","createDefaultNote","uuid","title","description","height","width","Base","styled","button","ApplyButton","onClick","label","ControlPanel","control","div","TextArea","textarea","AddNote","onAdd","useState","setNote","noteRef","useRef","current","updateNote","useCallback","handleDescriptionChange","event","target","handleTitleChange","handleHeightChange","Number","handleWidthChange","handleTopChange","handleLeftChange","handleAdd","style","backgroundColor","onChange","type","Editor","onExit","ref","internalValue","setInternalValue","editorValueRef","useEffect","element","focus","setSelectionRange","length","handleChange","saveAndExit","handleBlur","handlerKeyPress","code","ctrlKey","handleKeyDown","onBlur","onKeyPress","onKeyDown","Readonly","Body","editMode","setEditMode","exitEditMode","handleReadonlyDblClick","onDoubleClick","DeleteButton","Header","onStartDragging","onDelete","handleMouseDown","e","screenX","screenY","onMouseDown","StickyNote","startDragging","isDraggable","stopDragging","onResize","handleResize","entries","entry","contentRect","observer","ResizeObserver","observe","disconnect","useObserveElementResize","handleStartDragging","handleDelete","zIndex","onMouseUp","StickersZone","changeNote","dragging","onDeleteNote","draggableNoteIdRef","handleMouseMove","onMouseMove","cursor","ActionZone","Board","onAddNote","BoardContainer","useContext","addNote","deleteNote","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.465b00c1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { StickBoardStore } from \"./StickyBoardStore\";\r\n\r\n\r\nexport const StickBoardStoreContext = createContext<StickBoardStore | undefined>(undefined);","import { action, makeObservable, observable, reaction } from \"mobx\";\r\nimport { Note, WithPosition } from \"../models\";\r\n\r\nconst storageKey = \"sticky-board\";\r\n\r\nexport class StickBoardStore {\r\n  @observable notes: Note[] = [];\r\n  @observable draggableNoteId?: string;\r\n  draggableStartDelta?: WithPosition;\r\n\r\n  constructor() {\r\n    makeObservable(this);\r\n    const savedNotes = localStorage.getItem(storageKey);\r\n    if (savedNotes) {\r\n      this.notes = JSON.parse(savedNotes);\r\n    }\r\n\r\n    reaction(() => this.notes, () => this.updateStorage());\r\n  }\r\n\r\n  @action.bound\r\n  startDragging(note: Note, startPosition: WithPosition) {\r\n    this.draggableNoteId = note.id;\r\n    this.draggableStartDelta = {\r\n      top: note.top - startPosition.top,\r\n      left: note.left - startPosition.left\r\n    };\r\n\r\n    // make last for overlap others\r\n    this.notes = [...this.notes.filter(n => n !== note), note];\r\n  };\r\n\r\n  @action.bound\r\n  stopDragging() {\r\n    if (this.draggableNoteId) {\r\n      this.draggableNoteId = undefined;\r\n    }\r\n  };\r\n\r\n  @action.bound\r\n  dragging(position: WithPosition) {\r\n    this.notes = this.notes.map(note => {\r\n        if (note.id === this.draggableNoteId) {\r\n          const newPositionY = position.top + this.draggableStartDelta!.top;\r\n          const newPositionX = position.left + this.draggableStartDelta!.left;\r\n\r\n          return {\r\n            ...note,\r\n            top: newPositionY,\r\n            left: newPositionX\r\n          };\r\n        } else\r\n          return note;\r\n      }\r\n    );\r\n  };\r\n\r\n  @action.bound\r\n  addNote(note: Note) {\r\n    this.notes = [...this.notes, note];\r\n  };\r\n\r\n  @action.bound\r\n  deleteNote(note: Note) {\r\n    this.notes = this.notes.filter(x => x.id !== note.id);\r\n  }\r\n\r\n  @action.bound\r\n  changeNote(id: string, patch: Partial<Note>) {\r\n    this.notes = this.notes.map(note => note.id === id ? { ...note, ...patch } : note);\r\n  }\r\n\r\n  private updateStorage() {\r\n    localStorage.setItem(storageKey, JSON.stringify(this.notes));\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport { StickBoardStoreContext } from \"./StickBoardStoreContext\";\r\nimport { StickBoardStore } from \"./StickyBoardStore\";\r\n\r\nexport const StickBoardStoreProvider: React.FC = ({ children }) => {\r\n  const store = new StickBoardStore();\r\n  return <StickBoardStoreContext.Provider value={store}>{children}</StickBoardStoreContext.Provider>;\r\n};\r\n","export const randomDarkColor = () => {\r\n  let color = \"#\";\r\n  for (let i = 0; i < 3; i++) {\r\n    color += (\"0\" + Math.floor(Math.random() * Math.pow(16, 2) / 2).toString(16)).slice(-2);\r\n  }\r\n  return color;\r\n};","import { v4 as uuid } from \"uuid\";\r\nimport { Note } from \"../models\";\r\nimport { randomDarkColor } from \"./random\";\r\n\r\nexport const createDefaultNote = (): Note => {\r\n  return {\r\n    id: uuid(),\r\n    color: randomDarkColor(),\r\n    title: \"My Note Title\",\r\n    description: \"My Note Description\",\r\n    left: 50,\r\n    top: 50,\r\n    height: 200,\r\n    width: 200\r\n  };\r\n};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Base = styled.button`\r\n  margin: 4px;\r\n`;\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ApplyButton: React.FC<ApplyButtonProps> = ({ onClick }) => {\r\n  return (\r\n    <Base onClick={onClick}>Add</Base>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Base = styled.label`\r\n  margin: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\ninterface ControlPanelProps {\r\n  title: string;\r\n}\r\n\r\nexport const ControlPanel: React.FC<ControlPanelProps> = ({ children: control, title }) => {\r\n  return (\r\n    <Base>\r\n      {title}:\r\n      {control}\r\n    </Base>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Note } from \"../../models\";\r\nimport { createDefaultNote } from \"../../utils\";\r\nimport { ApplyButton } from \"./ApplyButton\";\r\nimport { ControlPanel } from \"./ControlPanel\";\r\n\r\nconst Base = styled.div`\r\n  margin: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  min-height: 50px;\r\n  max-height: 100px;\r\n  resize: vertical;\r\n`;\r\n\r\ninterface AddNoteProps {\r\n  onAdd: (note: Note) => void;\r\n}\r\n\r\nexport const AddNote: React.FC<AddNoteProps> = ({ onAdd }) => {\r\n  const [note, setNote] = useState(createDefaultNote());\r\n  const noteRef = useRef(note);\r\n  noteRef.current = note;\r\n\r\n  const updateNote = useCallback((patch: Partial<Note>) => {\r\n    setNote({ ...noteRef.current, ...patch });\r\n  }, []);\r\n\r\n  const handleDescriptionChange = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    updateNote({ description: event.target.value });\r\n  }, [updateNote]);\r\n  const handleTitleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    updateNote({ title: event.target.value });\r\n  }, [updateNote]);\r\n  const handleHeightChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    updateNote({ height: Number(event.target.value) });\r\n  }, [updateNote]);\r\n  const handleWidthChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    updateNote({ width: Number(event.target.value) });\r\n  }, [updateNote]);\r\n  const handleTopChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    updateNote({ top: Number(event.target.value) });\r\n  }, [updateNote]);\r\n  const handleLeftChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    updateNote({ left: Number(event.target.value) });\r\n  }, [updateNote]);\r\n\r\n  const handleAdd = useCallback(() => {\r\n    onAdd(noteRef.current);\r\n    setNote(createDefaultNote());\r\n  }, [onAdd]);\r\n\r\n  return (\r\n    <Base style={{ backgroundColor: note.color }}>\r\n      <ApplyButton onClick={handleAdd}/>\r\n      <ControlPanel title=\"Title\">\r\n        <input value={note.title} onChange={handleTitleChange}/>\r\n      </ControlPanel>\r\n      <ControlPanel title=\"Description\">\r\n        <TextArea value={note.description} onChange={handleDescriptionChange}/>\r\n      </ControlPanel>\r\n      <ControlPanel title=\"Width\">\r\n        <input type=\"number\" value={note.width} onChange={handleWidthChange}/>\r\n      </ControlPanel>\r\n      <ControlPanel title=\"Height\">\r\n        <input type=\"number\" value={note.height} onChange={handleHeightChange}/>\r\n      </ControlPanel>\r\n      <ControlPanel title=\"Position Top(px)\">\r\n        <input type=\"number\" value={note.top} onChange={handleTopChange}/>\r\n      </ControlPanel>\r\n      <ControlPanel title=\"Position Left(px)\">\r\n        <input type=\"number\" value={note.left} onChange={handleLeftChange}/>\r\n      </ControlPanel>\r\n    </Base>\r\n  );\r\n};","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Base = styled.textarea`\r\n  padding: 5px;\r\n  flex-grow: 1;\r\n  resize: none;\r\n  background-color: inherit;\r\n  color: inherit;\r\n`;\r\n\r\ninterface EditorProps {\r\n  value: string;\r\n  onChange: (description: string) => void;\r\n  onExit: () => void;\r\n}\r\n\r\nexport const Editor: React.FC<EditorProps> = ({\r\n  value,\r\n  onChange,\r\n  onExit\r\n}) => {\r\n  const ref = useRef<HTMLTextAreaElement>(null);\r\n  const [internalValue, setInternalValue] = useState(value);\r\n  const editorValueRef = useRef(internalValue);\r\n  editorValueRef.current = internalValue;\r\n\r\n  useEffect(() => {\r\n    const element = ref.current!;\r\n    element.focus();\r\n    element.setSelectionRange(element.value.length, element.value.length);\r\n  }, []);\r\n\r\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setInternalValue(event.target.value);\r\n  }, []);\r\n\r\n  const saveAndExit = useCallback(() => {\r\n    onChange(editorValueRef.current);\r\n    onExit();\r\n  }, [onChange, onExit]);\r\n\r\n  const handleBlur = useCallback(saveAndExit, [saveAndExit]);\r\n  const handlerKeyPress = useCallback(\r\n    event => {\r\n      if (event.code === \"Enter\" && event.ctrlKey) {\r\n        saveAndExit();\r\n      }\r\n    },\r\n    [saveAndExit]\r\n  );\r\n  const handleKeyDown = useCallback(\r\n    event => {\r\n      if (event.code === \"Escape\") {\r\n        onExit();\r\n      }\r\n    },\r\n    [onExit]\r\n  );\r\n\r\n  return <Base ref={ref} onChange={handleChange} value={internalValue} onBlur={handleBlur}\r\n               onKeyPress={handlerKeyPress} onKeyDown={handleKeyDown}/>;\r\n};","import React, { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Editor } from \"./Editor\";\r\n\r\nconst Readonly = styled.div`\r\n  padding: 5px;\r\n  overflow: auto;\r\n  white-space: pre-line;\r\n  flex-grow: 1;\r\n`;\r\n\r\ninterface BodyProps {\r\n  description: string;\r\n  onChange: (description: string) => void;\r\n}\r\n\r\nexport const Body: React.FC<BodyProps> = ({\r\n  description,\r\n  onChange\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const exitEditMode = useCallback(() => {\r\n    setEditMode(false);\r\n  }, []);\r\n\r\n  const handleReadonlyDblClick = useCallback(() => setEditMode(true), []);\r\n\r\n  if (editMode) {\r\n    return <Editor onChange={onChange} value={description} onExit={exitEditMode}/>;\r\n  }\r\n\r\n  return (\r\n    <Readonly onDoubleClick={handleReadonlyDblClick}>{description}</Readonly>\r\n  );\r\n};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Base = styled.button`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n  width: 20px;\r\n  height: 20px;\r\n  opacity: 0.5;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:before, &:after {\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    content: ' ';\r\n    height: 20px;\r\n    width: 2px;\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  &:before {\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  &:after {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\ninterface DeleteButtonProps {\r\n  onClick: () => void;\r\n}\r\n\r\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\r\n  onClick\r\n}) => {\r\n  return (\r\n    <Base onClick={onClick}/>\r\n  );\r\n};","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { WithPosition } from \"../../../models\";\r\nimport { DeleteButton } from \"./DeleteButton\";\r\n\r\nconst Base = styled.div`\r\n  cursor: move;\r\n  min-height: 20px;\r\n  border-bottom: 1px solid;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 5px;\r\n`;\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n  onStartDragging: (startPosition: WithPosition) => void;\r\n  onDelete: () => void;\r\n}\r\n\r\nexport const Header: React.FC<HeaderProps> = ({\r\n  title, onStartDragging, onDelete\r\n}) => {\r\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    onStartDragging({ left: e.screenX, top: e.screenY });\r\n  }, [onStartDragging]);\r\n\r\n  return (\r\n    <div>\r\n      <Base onMouseDown={handleMouseDown}>{title}</Base>\r\n      <DeleteButton onClick={onDelete}/>\r\n    </div>\r\n  );\r\n};","import React, { useCallback, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useObserveElementResize } from \"../../hooks\";\r\nimport { Note, WithPosition } from \"../../models\";\r\nimport { Body } from \"./Body\";\r\nimport { Header } from \"./Header\";\r\n\r\nconst Base = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  resize: both;\r\n  overflow: auto;\r\n  min-height: 70px;\r\n  min-width: 100px;\r\n  color: #ffffff;\r\n`;\r\n\r\ninterface StickyNoteProps {\r\n  note: Note;\r\n  isDraggable: boolean;\r\n  startDragging: (note: Note, startPosition: WithPosition) => void;\r\n  stopDragging: () => void;\r\n  onChange: (id: string, patch: Partial<Note>) => void;\r\n  onDelete: (note: Note) => void;\r\n}\r\n\r\nexport const StickyNote: React.FC<StickyNoteProps> = ({\r\n  note, startDragging, isDraggable, stopDragging, onChange, onDelete\r\n}) => {\r\n  const { color, description, left, top, height, width, title, id } = note;\r\n  const noteRef = useRef(note);\r\n  noteRef.current = note;\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleResize = useCallback(({ height, width }: DOMRectReadOnly) => {\r\n    onChange(id, { width, height });\r\n  }, [onChange, id]);\r\n  useObserveElementResize(ref, handleResize);\r\n\r\n  const handleStartDragging = useCallback(startPosition => {\r\n    startDragging(noteRef.current, startPosition);\r\n  }, [startDragging]);\r\n\r\n  const handleDescriptionChange = useCallback(description => {\r\n    onChange(id, { description });\r\n  }, [onChange, id]);\r\n\r\n  const handleDelete = useCallback(() => {\r\n    onDelete(noteRef.current);\r\n  }, [onDelete]);\r\n\r\n  return (\r\n    <Base ref={ref} style={{\r\n      top: top,\r\n      left: left,\r\n      backgroundColor: color,\r\n      height: height,\r\n      width: width,\r\n      zIndex: isDraggable ? 10 : undefined\r\n    }}\r\n          onMouseUp={stopDragging}>\r\n      <Header onStartDragging={handleStartDragging} onDelete={handleDelete} title={title}/>\r\n      <Body description={description} onChange={handleDescriptionChange}/>\r\n    </Base>\r\n  );\r\n};","import React, { useCallback, useEffect } from \"react\";\r\n\r\ntype ResizeCallback = (contentRect: DOMRectReadOnly) => void;\r\n\r\nexport function useObserveElementResize(ref: React.RefObject<Element>, onResize: ResizeCallback) {\r\n  const handleResize = useCallback(entries => {\r\n    const entry = entries[0];\r\n    onResize(entry.contentRect);\r\n  }, [onResize]);\r\n\r\n  useEffect(() => {\r\n    const observer = new ResizeObserver(handleResize);\r\n\r\n    if (ref) {\r\n      observer.observe(ref.current!);\r\n    }\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [handleResize, ref]);\r\n}","import React, { useCallback, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Note, WithPosition } from \"../models\";\r\nimport { StickyNote } from \"./StickyNote\";\r\n\r\nconst Base = styled.div`\r\n  flex-grow: 1;\r\n  position: relative;\r\n`;\r\n\r\ninterface StickersZoneProps {\r\n  stopDragging: () => void;\r\n  startDragging: (note: Note, startPosition: WithPosition) => void;\r\n  dragging: (cursorPosition: WithPosition) => void;\r\n  onDeleteNote: (note: Note) => void;\r\n  notes: Note[];\r\n  changeNote: (id: string, patch: Partial<Note>) => void;\r\n  draggableNoteId?: string;\r\n}\r\n\r\nexport const StickersZone: React.FC<StickersZoneProps> = ({\r\n  notes,\r\n  startDragging,\r\n  stopDragging,\r\n  draggableNoteId,\r\n  changeNote,\r\n  dragging,\r\n  onDeleteNote\r\n}) => {\r\n  const draggableNoteIdRef = useRef(draggableNoteId);\r\n  draggableNoteIdRef.current = draggableNoteId;\r\n\r\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    if (draggableNoteIdRef.current) {\r\n      dragging({ left: e.screenX, top: e.screenY });\r\n    }\r\n  }, [dragging]);\r\n\r\n  return (\r\n    <Base onMouseUp={stopDragging} onMouseMove={handleMouseMove}\r\n          style={{ cursor: draggableNoteId ? \"move\" : undefined }}>\r\n      {notes.map(note => (\r\n        <StickyNote onDelete={onDeleteNote} key={note.id} note={note} startDragging={startDragging}\r\n                    stopDragging={stopDragging}\r\n                    isDraggable={note.id === draggableNoteId} onChange={changeNote}/>))}\r\n    </Base>\r\n  );\r\n};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Note, WithPosition } from \"../models\";\r\nimport { AddNote } from \"./AddNote\";\r\nimport { StickersZone } from \"./StickersZone\";\r\n\r\nconst Base = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n`;\r\n\r\nconst ActionZone = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`;\r\n\r\ninterface BoardProps {\r\n  onAddNote: (note: Note) => void;\r\n  changeNote: (id: string, patch: Partial<Note>) => void;\r\n  onDeleteNote: (note: Note) => void;\r\n  startDragging: (note: Note, startPosition: WithPosition) => void;\r\n  stopDragging: () => void;\r\n  dragging: (cursorPosition: WithPosition) => void;\r\n  notes: Note[];\r\n  draggableNoteId?: string;\r\n}\r\n\r\nexport const Board: React.FC<BoardProps> = ({\r\n  notes,\r\n  onAddNote,\r\n  onDeleteNote,\r\n  stopDragging,\r\n  startDragging,\r\n  changeNote,\r\n  draggableNoteId,\r\n  dragging\r\n}) => {\r\n  return (\r\n    <Base>\r\n      <ActionZone>\r\n        <AddNote onAdd={onAddNote}/>\r\n      </ActionZone>\r\n      <StickersZone stopDragging={stopDragging} startDragging={startDragging} dragging={dragging} notes={notes}\r\n                    draggableNoteId={draggableNoteId} changeNote={changeNote} onDeleteNote={onDeleteNote}/>\r\n    </Base>\r\n  );\r\n};","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { StickBoardStoreContext } from \"../stores\";\r\nimport { Board } from \"./Board\";\r\n\r\nconst BoardContainer: React.FC = observer(() => {\r\n  const store = useContext(StickBoardStoreContext)!;\r\n\r\n  const { notes, addNote, startDragging, stopDragging, changeNote, deleteNote, draggableNoteId, dragging } = store;\r\n\r\n  return <Board notes={notes} onAddNote={addNote} onDeleteNote={deleteNote} startDragging={startDragging}\r\n                stopDragging={stopDragging} dragging={dragging} changeNote={changeNote}\r\n                draggableNoteId={draggableNoteId}/>;\r\n});\r\n\r\nexport { BoardContainer as Board };\r\n","import React from \"react\";\nimport { Board } from \"./components\";\nimport { StickBoardStoreProvider } from \"./stores\";\n\nexport const App: React.FC = () => {\n  return (\n    <StickBoardStoreProvider>\n      <Board/>\n    </StickBoardStoreProvider>\n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}